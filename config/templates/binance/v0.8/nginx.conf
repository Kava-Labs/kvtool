server {
   listen 8080;

   # allow all server names
   server_name _;

  location / {
    # set headers and response for options request
    if ($request_method = OPTIONS) {
      # allow all Origins
      add_header 'Access-Control-Allow-Origin' '*';

      # only allow POST, GET, and OPTIONS requests
      add_header 'Access-Control-Allow-Methods' 'POST, GET, OPTIONS';

      # allow additional headers (minimal setup to understand what we need)
      # Content-Type is safelisted, but need to include it here to allow application/json
      add_header 'Access-Control-Allow-Headers' 'Content-Type';

      # cache for 20 days
      add_header 'Access-Control-Max-Age' 1728000;

      # configure response headers for OPTIONS request
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;

      # return http response with no content
      return 204;
    }

    if ($request_method = GET) {
      # allow cors from all Origins on every request, including errors
      add_header 'Access-Control-Allow-Origin' '*' always;
      # allow response content length to be read
      add_header 'Access-Control-Expose-Headers' 'Content-Length';
    }

    if ($request_method = POST) {
      # allow cors from all Origins on every request, including errors
      add_header 'Access-Control-Allow-Origin' '*' always;
      # allow response content length to be read
      add_header 'Access-Control-Expose-Headers' 'Content-Length';
    }

    proxy_redirect off;
    proxy_set_header host $host;
    proxy_set_header X-real-ip $remote_addr;
    proxy_set_header X-forward-for $proxy_add_x_forwarded_for;
    proxy_pass http://127.0.0.1:8081;
  }
}

server {
   listen 26658;

   # allow all server names
   server_name _;

  location / {
    # set headers and response for options request
    if ($request_method = OPTIONS) {
      # allow all Origins
      add_header 'Access-Control-Allow-Origin' '*';

      # only allow POST, GET, and OPTIONS requests
      add_header 'Access-Control-Allow-Methods' 'POST, GET, OPTIONS';

      # allow additional headers (minimal setup to understand what we need)
      # Content-Type is safelisted, but need to include it here to allow application/json
      add_header 'Access-Control-Allow-Headers' 'Content-Type';

      # cache for 20 days
      add_header 'Access-Control-Max-Age' 1728000;

      # configure response headers for OPTIONS request
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;

      # return http response with no content
      return 204;
    }

    if ($request_method = GET) {
      # allow cors from all Origins on every request, including errors
      add_header 'Access-Control-Allow-Origin' '*' always;
      # allow response content length to be read
      add_header 'Access-Control-Expose-Headers' 'Content-Length';
    }

    if ($request_method = POST) {
      # allow cors from all Origins on every request, including errors
      add_header 'Access-Control-Allow-Origin' '*' always;
      # allow response content length to be read
      add_header 'Access-Control-Expose-Headers' 'Content-Length';
    }

    proxy_redirect off;
    proxy_set_header host $host;
    proxy_set_header X-real-ip $remote_addr;
    proxy_set_header X-forward-for $proxy_add_x_forwarded_for;
    proxy_pass http://127.0.0.1:26657;
  }
}
